{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Conditions": {
        "Launch1": {
            "Fn::Equals": [
                "1",
                "1"
            ]
        },
        "Launch2": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        "1",
                        {
                            "Ref": "InstanceCount"
                        }
                    ]
                }
            ]
        }
    },
    "Description": "CloudFormation template to create open contrail controller and compute instances",
    "Outputs": {
        "AMI": {
            "Description": "AMI Image used to launch instance",
            "Value": {
                "Ref": "CCAMI"
            }
        },
        "AvailabilityZone": {
            "Description": "Availablity Zone the Instance was launched.",
            "Value": {
                "Ref": "AvailZone"
            }
        },
        "CCPrivateIP": {
            "Description": "Contrail Controller (eth0) Private IP Address",
            "Value": {
                "Fn::GetAtt": [
                    "cc1",
                    "PrivateIp"
                ]
            }
        },
        "CCPublicIP": {
            "Description": "Contrail Controller EIP Address",
            "Value": {
                "Fn::GetAtt": [
                    "cc1",
                    "PublicIp"
                ]
            }
        },
        "ComputePrivateIP": {
            "Condition": "Launch2",
            "Description": "Compute node (eth0) Private IP Address",
            "Value": {
                "Fn::GetAtt": [
                    "cc2",
                    "PrivateIp"
                ]
            }
        },
        "ComputePublicIP": {
            "Condition": "Launch2",
            "Description": "Compute node EIP Address",
            "Value": {
                "Fn::GetAtt": [
                    "cc2",
                    "PublicIp"
                ]
            }
        }
    },
    "Parameters": {
        "AvailZone": {
            "Description": "Choose the Availability Zone to create the subnets and launch CC instance",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "CCAMI": {
            "Description": "Choose AMI that will be used for CC instances",
            "Type": "AWS::EC2::Image::Id"
        },
        "CCInstanceType": {
            "AllowedValues": [
                "t2.2xlarge",
                "t2.xlarge",
                "t2.micro",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.4xlarge",
                "c4.8xlarge"
            ],
            "Default": "t2.2xlarge",
            "Description": "Instance type that is needed",
            "Type": "String"
        },
        "CCName1": {
            "Description": "Name of Contrail Controller instance(1)",
            "MaxLength": "16",
            "Type": "String"
        },
        "CCName2": {
            "Description": "Name of Compute node instance(2)",
            "MaxLength": "16",
            "Type": "String"
        },
        "CCSecGrp": {
            "Default": "sg-******",
            "Description": "Select the Security Group to apply to CC cluster",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "CCSubnet": {
            "Default": "",
            "Description": "Subnet where the interface will get ip address",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "CCVPC": {
            "Description": "VPC where the CC cluster to be placed",
            "Type": "AWS::EC2::VPC::Id"
        },
        "InstanceCount": {
            "ConstraintDescription": "Must be a number between 1 and 3",
            "Default": "1",
            "Description": "Number of instances to start (must be between 1 and 3)",
            "MaxValue": "2",
            "MinValue": "1",
            "Type": "Number"
        },
        "SSHCidrAllow": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid CIDR range of the form x.x.x.x/x.",
            "Default": "0.0.0.0/0",
            "Description": "CIDR IP range allowed to shh to the contrail instances",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "SSHKey": {
            "Default": "CC",
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to instances",
            "Type": "AWS::EC2::KeyPair::KeyName"
        }
    },
    "Resources": {
        "cc1": {
            "Condition": "Launch1",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "AvailZone"
                },
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "90"
                        }
                    }
                ],
                "ImageId": {
                    "Ref": "CCAMI"
                },
                "InstanceType": {
                    "Ref": "CCInstanceType"
                },
                "KeyName": {
                    "Ref": "SSHKey"
                },
                "NetworkInterfaces": [
                    {
                        "AssociatePublicIpAddress": "true",
                        "DeleteOnTermination": "true",
                        "DeviceIndex": "0",
                        "GroupSet": [
                            {
                                "Ref": "CCSecGrp"
                            }
                        ],
                        "SubnetId": {
                            "Ref": "CCSubnet"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "CCName1"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "export DEBIAN_FRONTEND=noninteractive\n",
                                "sudo cp /home/ubuntu/.ssh/authorized_keys /root/.ssh/\n",
                                "sudo -s <<EOF\n",
                                "sed -i 's/^PermitRootLogin.*/PermitRootLogin yes/g' /etc/ssh/sshd_config\n",
                                "sed -i 's/^StrictModes.*/#StrictModes/g' /etc/ssh/sshd_config\n",
                                "sed -i 's/^PasswordAuthentication.*/PasswordAuthentication yes/g' /etc/ssh/sshd_config\n",
                                "echo 'root:contrail123' | chpasswd\n",
                                "systemctl restart sshd\n",
                                "apt-get update\n",
                                "apt-get -y install ntp ntpdate\n",
                                "\n",
                                "hostnamectl set-hostname ",
                                "'",
                                {
                                    "Ref": "CCName1"
                                },
                                "'",
                                "\n",
                                "service ntp stop;ntpdate 1.ubuntu.pool.ntp.org; service ntp start\n",
                                "curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\n",
                                "apt-get install -y apt-transport-https\n",
                                "echo 'deb http://apt.kubernetes.io/ kubernetes-xenial main' > /etc/apt/sources.list.d/kubernetes.list\n",
                                "apt-get update\n",
                                "apt-get install -y python2.7\n",
                                "ln -s /usr/bin/python2.7 /usr/bin/python\n",
                                "apt-get install -y docker.io\n",
                                "apt-get update\n",
                                "curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\n",
                                "apt-get update\n",
                                "apt-get install -y kubelet kubeadm kubectl kubernetes-cni\n",
                                "kubeadm init\n",
                                "sleep 130\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::EC2::Instance"
        },
        "cc2": {
            "Condition": "Launch2",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "AvailZone"
                },
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "90"
                        }
                    }
                ],
                "ImageId": {
                    "Ref": "CCAMI"
                },
                "InstanceType": {
                    "Ref": "CCInstanceType"
                },
                "KeyName": {
                    "Ref": "SSHKey"
                },
                "NetworkInterfaces": [
                    {
                        "AssociatePublicIpAddress": "true",
                        "DeleteOnTermination": "true",
                        "DeviceIndex": "0",
                        "GroupSet": [
                            {
                                "Ref": "CCSecGrp"
                            }
                        ],
                        "SubnetId": {
                            "Ref": "CCSubnet"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "CCName2"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "export DEBIAN_FRONTEND=noninteractive\n",
                                "sudo cp /home/ubuntu/.ssh/authorized_keys /root/.ssh/\n",
                                "sudo -s <<EOF\n",
                                "sed -i 's/^PermitRootLogin.*/PermitRootLogin yes/g' /etc/ssh/sshd_config\n",
                                "sed -i 's/^StrictModes.*/#StrictModes/g' /etc/ssh/sshd_config\n",
                                "sed -i 's/^PasswordAuthentication.*/PasswordAuthentication yes/g' /etc/ssh/sshd_config\n",
                                "echo 'root:contrail123' | chpasswd\n",
                                "systemctl restart sshd\n",
                                "apt-get update\n",
                                "apt-get -y install ntp ntpdate\n",
                                "\n",
                                "hostnamectl set-hostname ",
                                "'",
                                {
                                    "Ref": "CCName2"
                                },
                                "'",
                                "\n",
                                "service ntp stop;ntpdate 1.ubuntu.pool.ntp.org; service ntp start\n",
                                "curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\n",
                                "apt-get install -y apt-transport-https\n",
                                "echo 'deb http://apt.kubernetes.io/ kubernetes-xenial main' > /etc/apt/sources.list.d/kubernetes.list\n",
                                "apt-get update\n",
                                "apt-get install -y python2.7\n",
                                "ln -s /usr/bin/python2.7 /usr/bin/python\n",
                                "apt-get install -y docker.io\n",
                                "apt-get update\n",
                                "curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\n",
                                "apt-get update\n",
                                "apt-get install -y kubelet kubeadm kubectl kubernetes-cni\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::EC2::Instance"
        }
    }
}
